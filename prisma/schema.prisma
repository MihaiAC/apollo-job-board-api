generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employer {
  id           Int      @id @default(autoincrement())
  name         String
  contactEmail String   @unique
  industry     String
  managerId    Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  jobs         Job[]    @relation("EmployerJobs")
  manager      User     @relation("EmployerManager", fields: [managerId], references: [id], onDelete: Cascade)
}

model Job {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  employerId   Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  employer     Employer      @relation("EmployerJobs", fields: [employerId], references: [id], onDelete: Cascade)
  applications Application[] @relation("ApplicationJob")

  @@index([employerId])
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  cvUrl        String?
  role         Role
  passwordHash String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  applications Application[] @relation("ApplicationsUser")
  manages      Employer?     @relation("EmployerManager")
}

model Application {
  id        Int      @id @default(autoincrement())
  userId    Int
  jobId     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation("ApplicationsUser", fields: [userId], references: [id], onDelete: Cascade)
  job       Job      @relation("ApplicationJob", fields: [jobId], references: [id], onDelete: Cascade)

  @@unique([userId, jobId])
  @@index([userId])
  @@index([jobId])
}

enum Role {
  ADMIN
  MANAGER
  CANDIDATE
}
